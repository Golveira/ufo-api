name: Auth
description: |-

  Endpoints for managing authentication.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/auth/register
    metadata:
      groupName: Auth
      groupDescription: |-

        Endpoints for managing authentication.
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: 'Register a new user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: tyreek.moen@example.com
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: 's\J(=WT!)k,(%Xj3'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: tyreek.moen@example.com
      password: 's\J(=WT!)k,(%Xj3'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{ "access_token": "xxxxxxxx" }'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/login
    metadata:
      groupName: Auth
      groupDescription: |-

        Endpoints for managing authentication.
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Login a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: daren.hansen@example.org
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: oW)<TP
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: daren.hansen@example.org
      password: oW)<TP
    fileParameters: []
    responses:
      -
        status: 200
        content: '{ "access_token": "xxxxxxxx" }'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
