## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: |-

  Endpoints for managing users.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}/reports'
    metadata:
      groupName: Users
      groupDescription: |-

        Endpoints for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'List user reports'
      description: 'Get a list of reports of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: null
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9a7aa651-6ec3-46a2-bc33-4861ca91c3bb","user_id":"9a7aa651-6db6-4965-a5c9-a9fc2cca0426","summary":"Alias sit autem dolores et non id.","country":"France","state":"Wyoming","city":"North Destinee","lat":56.47191,"long":51.011929,"date":{"date":"1995-02-18 04:17:31.000000","timezone_type":3,"timezone":"UTC"},"duration":47,"object_shape":"ut","number_of_observers":7,"details":"Et iusto laudantium quod dolorem. Libero eum libero nesciunt ea ipsa. Necessitatibus cum vero aut dolorum. At laudantium ad possimus optio placeat."},{"id":"9a7aa651-70df-44e1-98e2-3f3189349759","user_id":"9a7aa651-6ff0-4dbc-aa15-f4f9a897722b","summary":"Eveniet autem velit est tenetur consequatur eaque.","country":"Botswana","state":"Mississippi","city":"Blickville","lat":-34.708886,"long":-91.203492,"date":{"date":"2010-02-06 16:58:01.000000","timezone_type":3,"timezone":"UTC"},"duration":47,"object_shape":"minima","number_of_observers":2,"details":"Eveniet dolorem doloribus est sapiente nulla fugit. Cum delectus voluptatem atque et harum. Voluptates aliquid dolorem voluptas architecto nostrum maxime."}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":15,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}/dossiers'
    metadata:
      groupName: Users
      groupDescription: |-

        Endpoints for managing user.
      subgroup: ''
      subgroupDescription: ''
      title: 'List user dossiers'
      description: 'Get a list of dossiers of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: null
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      user_id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9a7aa651-870b-4d83-ac2e-976a0859f51b","title":"Accusantium aut eos sit quis quidem ad ut.","description":"Et qui omnis consequatur ratione. Maiores consequatur est dignissimos. Non sed expedita ullam sed similique et quod.","created_at":"2023-10-28T17:54:30.000000Z","updated_at":"2023-10-28T17:54:30.000000Z","user_id":"9a7aa651-865d-4bd5-841d-00721d093d2d"},{"id":"9a7aa651-88bb-44f7-8205-bfcc7a447066","title":"Reiciendis dolor magnam sed.","description":"Ex tempore dolor et delectus vero culpa tenetur. Numquam neque et qui vel exercitationem eum.","created_at":"2023-10-28T17:54:30.000000Z","updated_at":"2023-10-28T17:54:30.000000Z","user_id":"9a7aa651-87e5-4644-8567-49298649e69a"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":15,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: Users
      groupDescription: |-

        Endpoints for managing user.
      subgroup: ''
      subgroupDescription: ''
      title: 'List users'
      description: 'Get a list of users.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9a7aa651-8c1d-41b8-a77a-7ee004f35209","username":"martin41","created_at":"2023-10-28T17:54:30.000000Z","updated_at":"2023-10-28T17:54:30.000000Z"},{"id":"9a7aa651-8cfb-4cd3-9794-3c838d0ee05d","username":"treilly","created_at":"2023-10-28T17:54:30.000000Z","updated_at":"2023-10-28T17:54:30.000000Z"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":15,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        Endpoints for managing user.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a user'
      description: 'Get a user by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: null
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9a7aa651-8ff0-4347-b1e1-0b36dd4e8795","username":"derick.hartmann","created_at":"2023-10-28T17:54:30.000000Z","updated_at":"2023-10-28T17:54:30.000000Z"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        Endpoints for managing user.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a user'
      description: 'Update a user by its ID.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: null
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: shaina.kilback@example.net
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: false
        example: 'z$O`p[b^,XMC`-_26Q'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: shaina.kilback@example.net
      password: 'z$O`p[b^,XMC`-_26Q'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9a7aa651-c89a-4c13-a033-6eaf7219ce3e","username":"belle34","created_at":"2023-10-28T17:54:30.000000Z","updated_at":"2023-10-28T17:54:30.000000Z"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fk6cah16Z5PE8g34eVbDavd'
    controller: null
    method: null
    route: null
    custom: []
