## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: |-

  Endpoints for managing user.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: Users
      groupDescription: |-

        Endpoints for managing user.
      subgroup: ''
      subgroupDescription: ''
      title: 'List users'
      description: 'Get a list of users.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9a7f0558-a34c-4c17-b911-2e3d9a703568","username":"axel65","created_at":"2023-10-30T22:03:32.000000Z","updated_at":"2023-10-30T22:03:32.000000Z"},{"id":"9a7f0558-a45e-4d89-810f-95728a65359e","username":"imarvin","created_at":"2023-10-30T22:03:32.000000Z","updated_at":"2023-10-30T22:03:32.000000Z"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":15,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        Endpoints for managing user.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a user'
      description: 'Returns a single user specified by the ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: null
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9a7f0558-a7c7-4ab9-9347-f4fbb15e8368","username":"webster.schiller","created_at":"2023-10-30T22:03:32.000000Z","updated_at":"2023-10-30T22:03:32.000000Z"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user
    metadata:
      groupName: Users
      groupDescription: |-

        Endpoints for managing user.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the authenticated user.'
      description: 'Returns the authenticated user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9a7f0558-e5d9-4735-9fea-28e4ffda7947","username":"effie52","created_at":"2023-10-30T22:03:32.000000Z","updated_at":"2023-10-30T22:03:32.000000Z"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/v1/user
    metadata:
      groupName: Users
      groupDescription: |-

        Endpoints for managing user.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the authenticated user.'
      description: 'Update the email and password of the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: frederik.mohr@example.net
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: false
        example: 'Ct*yiE7+qfeo%3d'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: frederik.mohr@example.net
      password: 'Ct*yiE7+qfeo%3d'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9a7f0558-e95a-429f-915b-cfc6047724c1","username":"khaag","created_at":"2023-10-30T22:03:32.000000Z","updated_at":"2023-10-30T22:03:32.000000Z"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z831fvb6khgVE6a4cDeP5da'
    controller: null
    method: null
    route: null
    custom: []
